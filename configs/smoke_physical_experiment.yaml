# configs/smoke_inverse_experiment.yaml
#
# Config to run the PhysicalTrainer for the inverse smoke problem.
# This finds the 'buoyancy' parameter from data.

run_params:
  experiment_name: "smoke_inverse_problem_v1"
  notes: "Training a physical model (SmokeModel) to find the optimal buoyancy and nu."
  mode: ['generate_scene','train']
  model_type: 'physical'

# --- Data Configuration ---
data:
  data_dir: 'data/'
  dset_name: 'smoke_128' 
  fields: ['density', 'velocity', 'inflow']
  fields_scheme: 'dVVi'

# --- Data Generation Parameters ---
generation_params:
  # These parameters describe the data in 'dset_name'
  model_name: 'SmokeModel'
  num_simulations: 1
  total_steps: 50       # Total steps in the saved simulation data
  save_interval: 1

# --- Model Definitions (Plug-and-Play) ---
model:
  physical:
    name: 'SmokeModel' # Class name in src.models.physical
    model_path: 'results/models/'
    model_save_name: 'smoke_128'
      
    # Model parameters
    domain: { size_x: 100, size_y: 100 }
    resolution: { x: 128, y: 128 }
    dt: 1.0
    pde_params:
      nu: 0.1 # Ground truth value used for data generation
      buoyancy: 1.0 # Ground truth value used for data generation
      inflow_radius: 10.0
      inflow_rate: 0.1 
      inflow_rand_x_range: [0.2, 0.6]
      inflow_rand_y_range: [0.15, 0.05]



trainer_params:
  learning_rate: 1.0e-4  # Learning rate from inverse_heat.py
  batch_size: 1         # Number of samples per gradient update, not yet implemented in PhysicalTrainer
  epochs: 50             # Number of passes over the dataset
  num_predict_steps: 5   
  
  train_sim: [0] # Which simulations to use for training
  learnable_parameters:
    - name: 'nu'  # Must match the attribute name in the PhysicalModel
      initial_guess: 0.005
    - name: 'buoyancy'  # Must match the attribute name in the PhysicalModel
      initial_guess: 0.5